#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Mac
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Intel –∏ Apple Silicon –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã
"""

import os
import sys
import subprocess
import platform
import shutil

def check_platform():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ macOS"""
    if platform.system() != "Darwin":
        print("‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è macOS!")
        return False
    return True

def build_universal_app():
    """–°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print("üî® –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–±–æ—Ä–∫–∏
    if os.path.exists("dist"):
        shutil.rmtree("dist")
    if os.path.exists("build"):
        shutil.rmtree("build")
    if os.path.exists("SurveyApp.spec"):
        os.remove("SurveyApp.spec")
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏
    cmd = [
        "pyinstaller",
        "--onedir",
        "--windowed",
        "--name", "SurveyApp",
        "--icon", "favicon.ico",
        "--target-arch", "universal2",
        "survey_app_pyqt.py"
    ]
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É...")
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        print(f"–í—ã–≤–æ–¥: {e.stdout}")
        print(f"–û—à–∏–±–∫–∏: {e.stderr}")
        return False

def create_universal_binary():
    """–°–æ–∑–¥–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫ –≤—Ä—É—á–Ω—É—é"""
    print("üîß –°–æ–∑–¥–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫...")
    
    app_path = "dist/SurveyApp.app"
    if not os.path.exists(app_path):
        print("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return False
    
    # –ü—É—Ç—å –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–º—É —Ñ–∞–π–ª—É
    exec_path = f"{app_path}/Contents/MacOS/SurveyApp"
    
    if not os.path.exists(exec_path):
        print("‚ùå –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    result = subprocess.run(["file", exec_path], capture_output=True, text=True)
    print(f"üîç –¢–µ–∫—É—â–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {result.stdout.strip()}")
    
    # –ï—Å–ª–∏ —É–∂–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    if "universal binary" in result.stdout.lower():
        print("‚úÖ –£–∂–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫!")
        return True
    
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–ª—è arm64
        arm64_path = f"{exec_path}.arm64"
        shutil.copy2(exec_path, arm64_path)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–ª—è x86_64 (—á–µ—Ä–µ–∑ Rosetta)
        x86_64_path = f"{exec_path}.x86_64"
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ Rosetta –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è x86_64 –≤–µ—Ä—Å–∏–∏
        rosetta_cmd = [
            "arch", "-x86_64", "python", "-m", "PyInstaller",
            "--onedir",
            "--windowed", 
            "--name", "SurveyApp_x86",
            "--icon", "favicon.ico",
            "survey_app_pyqt.py"
        ]
        
        print("üîÑ –°–æ–∑–¥–∞–µ–º x86_64 –≤–µ—Ä—Å–∏—é —á–µ—Ä–µ–∑ Rosetta...")
        result = subprocess.run(rosetta_cmd, check=True, capture_output=True, text=True)
        
        # –ö–æ–ø–∏—Ä—É–µ–º x86_64 –≤–µ—Ä—Å–∏—é
        x86_exec_path = "dist/SurveyApp_x86/SurveyApp_x86"
        if os.path.exists(x86_exec_path):
            shutil.copy2(x86_exec_path, x86_64_path)
            print("‚úÖ x86_64 –≤–µ—Ä—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞!")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å x86_64 –≤–µ—Ä—Å–∏—é")
            return False
        
        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫
        print("üîó –°–æ–∑–¥–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫...")
        lipo_cmd = [
            "lipo", "-create",
            "-arch", "arm64", arm64_path,
            "-arch", "x86_64", x86_64_path,
            "-output", exec_path
        ]
        
        result = subprocess.run(lipo_cmd, check=True, capture_output=True, text=True)
        print("‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫ —Å–æ–∑–¥–∞–Ω!")
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        os.remove(arm64_path)
        os.remove(x86_64_path)
        shutil.rmtree("dist/SurveyApp_x86", ignore_errors=True)
        shutil.rmtree("build", ignore_errors=True)
        if os.path.exists("SurveyApp_x86.spec"):
            os.remove("SurveyApp_x86.spec")
        
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞: {e}")
        return False

def verify_universal_binary():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫...")
    
    app_path = "dist/SurveyApp.app/Contents/MacOS/SurveyApp"
    
    if not os.path.exists(app_path):
        print("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    result = subprocess.run(["file", app_path], capture_output=True, text=True)
    print(f"üîç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {result.stdout.strip()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å –ø–æ–º–æ—â—å—é lipo
    result = subprocess.run(["lipo", "-info", app_path], capture_output=True, text=True)
    print(f"üîç Lipo info: {result.stdout.strip()}")
    
    if "universal binary" in result.stdout.lower() or "arm64 x86_64" in result.stdout:
        print("‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print("‚ùå –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫ –Ω–µ —Å–æ–∑–¥–∞–Ω!")
        return False

def create_installer_script():
    """–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    script_content = """#!/bin/bash
echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SurveyApp –¥–ª—è Mac (Intel + Apple Silicon)"
echo "=================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
ARCH=$(uname -m)
echo "üîç –í–∞—à–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"

if [[ "$ARCH" == "arm64" ]]; then
    echo "‚úÖ Apple Silicon Mac (M1/M2/M3) - –Ω–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
elif [[ "$ARCH" == "x86_64" ]]; then
    echo "‚úÖ Intel Mac - –Ω–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
else
    echo "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
fi

# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
APP_PATH="/Applications/SurveyApp.app"
if [ -d "$APP_PATH" ]; then
    echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é..."
    rm -rf "$APP_PATH"
fi

echo "üì¶ –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
cp -R "SurveyApp.app" "$APP_PATH"

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É:"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø–∞–ø–∫—É '–ü—Ä–æ–≥—Ä–∞–º–º—ã' –≤ Finder"
echo "2. –ù–∞–π–¥–∏—Ç–µ 'SurveyApp' –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ"
echo "3. –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ macOS –º–æ–∂–µ—Ç –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ"
echo ""
echo "üîß –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è:"
echo "1. –†–∞–∑—Ä–µ—à–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "2. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: sudo xattr -rd com.apple.quarantine /Applications/SurveyApp.app"
"""
    
    with open("dist/install.sh", "w") as f:
        f.write(script_content)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod("dist/install.sh", 0o755)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üçé –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ SurveyApp –¥–ª—è Mac")
    print("=" * 60)
    
    if not check_platform():
        return
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Å–±–æ—Ä–∫—É
    if build_universal_app():
        if verify_universal_binary():
            create_installer_script()
            print("\nüéâ –ì–æ—Ç–æ–≤–æ!")
            print("üìÅ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: dist/SurveyApp.app")
            print("üìÅ –£—Å—Ç–∞–Ω–æ–≤–∫–∞: dist/install.sh")
            print("\nüí° –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Intel –∏ Apple Silicon Mac!")
            return
    
    # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, —Å–æ–∑–¥–∞–µ–º –≤—Ä—É—á–Ω—É—é
    print("\nüîß –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, —Å–æ–∑–¥–∞–µ–º –≤—Ä—É—á–Ω—É—é...")
    
    if create_universal_binary():
        if verify_universal_binary():
            create_installer_script()
            print("\nüéâ –ì–æ—Ç–æ–≤–æ!")
            print("üìÅ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: dist/SurveyApp.app")
            print("üìÅ –£—Å—Ç–∞–Ω–æ–≤–∫–∞: dist/install.sh")
            print("\nüí° –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Intel –∏ Apple Silicon Mac!")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")

if __name__ == "__main__":
    main()



#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Universal Binary
–¢—Ä–µ–±—É–µ—Ç Universal Python —Å python.org
"""

import os
import sys
import subprocess
import platform
import shutil

def find_universal_python():
    """–ù–∞—Ö–æ–¥–∏–º Universal Python"""
    print("üîç –ò—â–µ–º Universal Python...")
    
    # –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ Universal Python
    possible_paths = [
        "/Library/Frameworks/Python.framework/Versions/3.12/bin/python3",
        "/Library/Frameworks/Python.framework/Versions/3.11/bin/python3",
        "/usr/local/bin/python3",
        "/opt/homebrew/bin/python3"
    ]
    
    for path in possible_paths:
        if os.path.exists(path):
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, universal –ª–∏ Python
                result = subprocess.run(["file", path], capture_output=True, text=True)
                if "universal binary" in result.stdout.lower():
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω Universal Python: {path}")
                    return path
                else:
                    print(f"‚ùå Python –Ω–µ universal: {path}")
            except:
                continue
    
    print("‚ùå Universal Python –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    print("üìã –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python —Å https://www.python.org/downloads/")
    return None

def install_dependencies(python_path):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ Universal Python"""
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    
    dependencies = ["PyQt6", "PyInstaller"]
    
    for dep in dependencies:
        try:
            print(f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {dep}...")
            result = subprocess.run([
                python_path, "-m", "pip", "install", dep
            ], check=True, capture_output=True, text=True)
            print(f"‚úÖ {dep} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {dep}: {e}")
            return False
    
    return True

def build_universal_binary(python_path):
    """–°–æ–±–∏—Ä–∞–µ–º Universal Binary"""
    print("üî® –°–æ–±–∏—Ä–∞–µ–º Universal Binary...")
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–±–æ—Ä–∫–∏
    if os.path.exists("dist"):
        shutil.rmtree("dist")
    if os.path.exists("build"):
        shutil.rmtree("build")
    if os.path.exists("SurveyApp.spec"):
        os.remove("SurveyApp.spec")
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è Universal Binary
    cmd = [
        python_path, "-m", "PyInstaller",
        "--onedir",
        "--windowed",
        "--name", "SurveyApp",
        "--icon", "favicon.icns",
        "--target-arch", "universal2",
        "survey_app_pyqt.py"
    ]
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É...")
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ Universal Binary —Å–æ–∑–¥–∞–Ω!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        print(f"–í—ã–≤–æ–¥: {e.stdout}")
        print(f"–û—à–∏–±–∫–∏: {e.stderr}")
        return False

def verify_universal_binary():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º Universal Binary"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Universal Binary...")
    
    app_path = "dist/SurveyApp.app/Contents/MacOS/SurveyApp"
    
    if not os.path.exists(app_path):
        print("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    result = subprocess.run(["file", app_path], capture_output=True, text=True)
    print(f"–¢–∏–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {result.stdout.strip()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å –ø–æ–º–æ—â—å—é lipo
    result = subprocess.run(["lipo", "-info", app_path], capture_output=True, text=True)
    print(f"–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã: {result.stdout.strip()}")
    
    if "universal binary" in result.stdout.lower() or "x86_64 arm64" in result.stdout or "arm64 x86_64" in result.stdout:
        print("‚úÖ Universal Binary —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ Intel –∏ Apple Silicon!")
        return True
    else:
        print("‚ùå Universal Binary –Ω–µ —Å–æ–∑–¥–∞–Ω!")
        return False

def create_installer_script():
    """–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    script_content = """#!/bin/bash
echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SurveyApp –¥–ª—è Mac (Intel + Apple Silicon)"
echo "=================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
ARCH=$(uname -m)
echo "üîç –í–∞—à–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"

if [[ "$ARCH" == "arm64" ]]; then
    echo "‚úÖ Apple Silicon Mac (M1/M2/M3/M4) - –Ω–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
elif [[ "$ARCH" == "x86_64" ]]; then
    echo "‚úÖ Intel Mac - –Ω–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
else
    echo "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
fi

# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
APP_PATH="/Applications/SurveyApp.app"
if [ -d "$APP_PATH" ]; then
    echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é..."
    rm -rf "$APP_PATH"
fi

echo "üì¶ –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
cp -R "SurveyApp.app" "$APP_PATH"

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É:"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø–∞–ø–∫—É '–ü—Ä–æ–≥—Ä–∞–º–º—ã' –≤ Finder"
echo "2. –ù–∞–π–¥–∏—Ç–µ 'SurveyApp' –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ"
echo "3. –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ macOS –º–æ–∂–µ—Ç –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ"
echo ""
echo "üîß –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è:"
echo "1. –†–∞–∑—Ä–µ—à–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "2. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: sudo xattr -rd com.apple.quarantine /Applications/SurveyApp.app"
"""
    
    with open("dist/install.sh", "w") as f:
        f.write(script_content)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod("dist/install.sh", 0o755)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏")

def create_readme():
    """–°–æ–∑–¥–∞–µ–º README —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏"""
    readme_content = """# üçé SurveyApp –¥–ª—è Mac (Universal Binary)

## üìã –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- **macOS 10.15+** (Catalina –∏–ª–∏ –Ω–æ–≤–µ–µ)
- **Intel Mac** –∏–ª–∏ **Apple Silicon Mac** (M1/M2/M3/M4)

## üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞

### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞:
```bash
./install.sh
```

### –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞:
```bash
# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
cp -R SurveyApp.app /Applications/

# –ó–∞–ø—É—Å–∫–∞–µ–º
open /Applications/SurveyApp.app
```

## üîß –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å

### Apple Silicon Mac (M1/M2/M3/M4):
- ‚úÖ –ù–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
- ‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
- ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫

### Intel Mac:
- ‚úÖ –ù–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
- ‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
- ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫

## üõ†Ô∏è –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º

### –ü—Ä–æ–±–ª–µ–º–∞: "App is damaged"
```bash
# –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—É—Å–∫
sudo xattr -rd com.apple.quarantine /Applications/SurveyApp.app
```

### –ü—Ä–æ–±–ª–µ–º–∞: "Cannot be opened because it is from an unidentified developer"
```bash
# –†–∞–∑—Ä–µ—à–∞–µ–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
# –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å ‚Üí –†–∞–∑—Ä–µ—à–∏—Ç—å
```

## üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å

| –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ | –ó–∞–ø—É—Å–∫ | –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å |
|-------------|--------|-------------------|
| Apple Silicon | ‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π | üöÄ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è |
| Intel Mac | ‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π | üöÄ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è |

## üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã

```bash
# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É Mac
uname -m

# arm64 = Apple Silicon
# x86_64 = Intel
```

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä—Å–∏—é macOS: `sw_vers`
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: `ls -la /Applications/SurveyApp.app`
3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: `sudo xattr -rd com.apple.quarantine /Applications/SurveyApp.app`
"""
    
    with open("dist/README.md", "w") as f:
        f.write(readme_content)
    print("‚úÖ –°–æ–∑–¥–∞–Ω README")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üçé –°–æ–∑–¥–∞–Ω–∏–µ Universal Binary –¥–ª—è SurveyApp")
    print("=" * 60)
    
    # –ù–∞—Ö–æ–¥–∏–º Universal Python
    python_path = find_universal_python()
    if not python_path:
        print("‚ùå Universal Python –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üìã –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python —Å https://www.python.org/downloads/")
        return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not install_dependencies(python_path):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏!")
        return
    
    # –°–æ–±–∏—Ä–∞–µ–º Universal Binary
    if build_universal_binary(python_path):
        if verify_universal_binary():
            create_installer_script()
            create_readme()
            print("\nüéâ –ì–æ—Ç–æ–≤–æ!")
            print("üìÅ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: dist/SurveyApp.app")
            print("üìÅ –£—Å—Ç–∞–Ω–æ–≤–∫–∞: dist/install.sh")
            print("üìÅ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: dist/README.md")
            print("\nüí° –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Intel –∏ Apple Silicon!")
        else:
            print("‚ùå Universal Binary –Ω–µ —Å–æ–∑–¥–∞–Ω!")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å Universal Binary!")

if __name__ == "__main__":
    main()

#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Universal Python –∏ —Å–æ–∑–¥–∞–Ω–∏—è Universal Binary
"""

import os
import sys
import subprocess
import platform
import shutil

def check_current_python():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π Python"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π Python...")
    
    arch = platform.machine()
    print(f"–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {arch}")
    
    python_path = sys.executable
    print(f"Python –ø—É—Ç—å: {python_path}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, universal –ª–∏ Python
    try:
        result = subprocess.run(["file", python_path], capture_output=True, text=True)
        print(f"–¢–∏–ø Python: {result.stdout.strip()}")
        
        if "universal binary" in result.stdout.lower():
            print("‚úÖ Universal Python —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
            return True
        else:
            print("‚ùå Python —Ç–æ–ª—å–∫–æ –¥–ª—è arm64, –Ω—É–∂–µ–Ω Universal")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def install_universal_python():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Universal Python"""
    print("üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Universal Python...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ Universal Python
    universal_paths = [
        "/Library/Frameworks/Python.framework/Versions/3.12/bin/python3",
        "/Library/Frameworks/Python.framework/Versions/3.11/bin/python3",
        "/usr/local/bin/python3"
    ]
    
    for path in universal_paths:
        if os.path.exists(path):
            try:
                result = subprocess.run(["file", path], capture_output=True, text=True)
                if "universal binary" in result.stdout.lower():
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω Universal Python: {path}")
                    return path
            except:
                continue
    
    print("‚ùå Universal Python –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    print("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:")
    print("1. –°–∫–∞—á–∞–π—Ç–µ Python —Å https://www.python.org/downloads/")
    print("2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é 3.11 –∏–ª–∏ 3.12")
    print("3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ .pkg —Ñ–∞–π–ª")
    print("4. Python –±—É–¥–µ—Ç –≤ /Library/Frameworks/Python.framework/")
    
    return None

def create_universal_build():
    """–°–æ–∑–¥–∞–µ–º Universal Binary"""
    print("üî® –°–æ–∑–¥–∞–µ–º Universal Binary...")
    
    # –ù–∞—Ö–æ–¥–∏–º Universal Python
    universal_python = install_universal_python()
    if not universal_python:
        print("‚ùå Universal Python –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–±–æ—Ä–∫–∏
    if os.path.exists("dist"):
        shutil.rmtree("dist")
    if os.path.exists("build"):
        shutil.rmtree("build")
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è Universal Binary
    cmd = [
        universal_python, "-m", "PyInstaller",
        "--onedir",
        "--windowed",
        "--name", "SurveyApp",
        "--icon", "favicon.ico",
        "--target-arch", "universal2",
        "survey_app_pyqt.py"
    ]
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É Universal Binary...")
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ Universal Binary —Å–æ–∑–¥–∞–Ω!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        print(f"–í—ã–≤–æ–¥: {e.stdout}")
        print(f"–û—à–∏–±–∫–∏: {e.stderr}")
        return False

def verify_universal_binary():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º Universal Binary"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Universal Binary...")
    
    app_path = "dist/SurveyApp.app/Contents/MacOS/SurveyApp"
    
    if not os.path.exists(app_path):
        print("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    result = subprocess.run(["file", app_path], capture_output=True, text=True)
    print(f"–¢–∏–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {result.stdout.strip()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å –ø–æ–º–æ—â—å—é lipo
    result = subprocess.run(["lipo", "-info", app_path], capture_output=True, text=True)
    print(f"–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã: {result.stdout.strip()}")
    
    if "universal binary" in result.stdout.lower() or "arm64 x86_64" in result.stdout:
        print("‚úÖ Universal Binary —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ Intel –∏ Apple Silicon!")
        return True
    else:
        print("‚ùå Universal Binary –Ω–µ —Å–æ–∑–¥–∞–Ω!")
        return False

def create_installer_script():
    """–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    script_content = """#!/bin/bash
echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SurveyApp –¥–ª—è Mac (Intel + Apple Silicon)"
echo "=================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
ARCH=$(uname -m)
echo "üîç –í–∞—à–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"

if [[ "$ARCH" == "arm64" ]]; then
    echo "‚úÖ Apple Silicon Mac (M1/M2/M3/M4) - –Ω–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
elif [[ "$ARCH" == "x86_64" ]]; then
    echo "‚úÖ Intel Mac - –Ω–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
else
    echo "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
fi

# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
APP_PATH="/Applications/SurveyApp.app"
if [ -d "$APP_PATH" ]; then
    echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é..."
    rm -rf "$APP_PATH"
fi

echo "üì¶ –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
cp -R "SurveyApp.app" "$APP_PATH"

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É:"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø–∞–ø–∫—É '–ü—Ä–æ–≥—Ä–∞–º–º—ã' –≤ Finder"
echo "2. –ù–∞–π–¥–∏—Ç–µ 'SurveyApp' –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ"
echo "3. –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ macOS –º–æ–∂–µ—Ç –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ"
echo ""
echo "üîß –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è:"
echo "1. –†–∞–∑—Ä–µ—à–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "2. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: sudo xattr -rd com.apple.quarantine /Applications/SurveyApp.app"
"""
    
    with open("dist/install.sh", "w") as f:
        f.write(script_content)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod("dist/install.sh", 0o755)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üçé –°–æ–∑–¥–∞–Ω–∏–µ Universal Binary –¥–ª—è SurveyApp")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π Python
    if check_current_python():
        print("‚úÖ Universal Python —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    else:
        print("‚ùå –ù—É–∂–µ–Ω Universal Python")
        universal_python = install_universal_python()
        if not universal_python:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ Universal Python!")
            print("üìã –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python —Å https://www.python.org/downloads/")
            return
    
    # –°–æ–∑–¥–∞–µ–º Universal Binary
    if create_universal_build():
        if verify_universal_binary():
            create_installer_script()
            print("\nüéâ –ì–æ—Ç–æ–≤–æ!")
            print("üìÅ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: dist/SurveyApp.app")
            print("üìÅ –£—Å—Ç–∞–Ω–æ–≤–∫–∞: dist/install.sh")
            print("\nüí° –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Intel –∏ Apple Silicon!")
        else:
            print("‚ùå Universal Binary –Ω–µ —Å–æ–∑–¥–∞–Ω!")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å Universal Binary!")

if __name__ == "__main__":
    main()



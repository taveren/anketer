#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Mac
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Intel –∏ Apple Silicon –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã
"""

import os
import sys
import subprocess
import platform
import shutil

def check_platform():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ macOS"""
    if platform.system() != "Darwin":
        print("‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è macOS!")
        return False
    return True

def check_architecture():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É"""
    arch = platform.machine()
    print(f"üîç –¢–µ–∫—É—â–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {arch}")
    
    if arch == "arm64":
        print("‚úÖ Apple Silicon (M1/M2/M3) - –º–æ–∂–µ–º —Å–æ–±—Ä–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    elif arch == "x86_64":
        print("‚úÖ Intel Mac - –º–æ–∂–µ–º —Å–æ–±—Ä–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    else:
        print(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {arch}")
    
    return True

def build_universal():
    """–°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print("üî® –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–±–æ—Ä–∫–∏
    if os.path.exists("dist"):
        shutil.rmtree("dist")
    if os.path.exists("build"):
        shutil.rmtree("build")
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏
    cmd = [
        "pyinstaller",
        "--onedir",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º onedir –≤–º–µ—Å—Ç–æ onefile –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        "--windowed",
        "--name", "SurveyApp",
        "--icon", "favicon.ico",
        "--target-arch", "universal2",  # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
        "survey_app_pyqt.py"
    ]
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É...")
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        print(f"–í—ã–≤–æ–¥: {e.stdout}")
        print(f"–û—à–∏–±–∫–∏: {e.stderr}")
        return False

def create_dmg():
    """–°–æ–∑–¥–∞–µ–º DMG —Ñ–∞–π–ª –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è"""
    print("üì¶ –°–æ–∑–¥–∞–µ–º DMG —Ñ–∞–π–ª...")
    
    app_path = "dist/SurveyApp.app"
    dmg_path = "dist/SurveyApp.dmg"
    
    if not os.path.exists(app_path):
        print("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è DMG
        temp_dir = "dist/temp_dmg"
        os.makedirs(temp_dir, exist_ok=True)
        
        # –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        shutil.copytree(app_path, f"{temp_dir}/SurveyApp.app")
        
        # –°–æ–∑–¥–∞–µ–º DMG
        cmd = [
            "hdiutil", "create",
            "-volname", "SurveyApp",
            "-srcfolder", temp_dir,
            "-ov",
            "-format", "UDZO",
            dmg_path
        ]
        
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ DMG —Å–æ–∑–¥–∞–Ω!")
        
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        shutil.rmtree(temp_dir)
        
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è DMG: {e}")
        return False

def create_installer_script():
    """–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    script_content = """#!/bin/bash
echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SurveyApp..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
ARCH=$(uname -m)
echo "üîç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"

# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
APP_PATH="/Applications/SurveyApp.app"
if [ -d "$APP_PATH" ]; then
    echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é..."
    rm -rf "$APP_PATH"
fi

echo "üì¶ –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
cp -R "SurveyApp.app" "$APP_PATH"

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ –ø–∞–ø–∫–∏ –ü—Ä–æ–≥—Ä–∞–º–º—ã"
"""
    
    with open("dist/install.sh", "w") as f:
        f.write(script_content)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod("dist/install.sh", 0o755)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üçé –°–±–æ—Ä–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ SurveyApp –¥–ª—è Mac")
    print("=" * 50)
    
    if not check_platform():
        return
    
    if not check_architecture():
        return
    
    if not build_universal():
        return
    
    create_installer_script()
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å DMG (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if input("üì¶ –°–æ–∑–¥–∞—Ç—å DMG —Ñ–∞–π–ª? (y/n): ").lower() == 'y':
        create_dmg()
    
    print("\nüéâ –ì–æ—Ç–æ–≤–æ!")
    print("üìÅ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: dist/SurveyApp.app")
    print("üìÅ –£—Å—Ç–∞–Ω–æ–≤–∫–∞: dist/install.sh")
    if os.path.exists("dist/SurveyApp.dmg"):
        print("üìÅ DMG: dist/SurveyApp.dmg")
    
    print("\nüí° –î–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è:")
    print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ SurveyApp.app –Ω–∞ –ª—é–±–æ–π Mac")
    print("2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ DMG —Ñ–∞–π–ª")
    print("3. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Intel –∏ Apple Silicon")

if __name__ == "__main__":
    main()



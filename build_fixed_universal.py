#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ Universal Binary
–£—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å PyQt6 –Ω–∞ Intel Mac
"""

import os
import sys
import subprocess
import platform
import shutil

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    python_path = "/Library/Frameworks/Python.framework/Versions/3.12/bin/python3"
    if not os.path.exists(python_path):
        print("‚ùå Universal Python –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    result = subprocess.run(["file", python_path], capture_output=True, text=True)
    if "universal binary" not in result.stdout.lower():
        print("‚ùå Python –Ω–µ universal!")
        return False
    
    print("‚úÖ Universal Python –Ω–∞–π–¥–µ–Ω!")
    return True

def install_dependencies():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    
    python_path = "/Library/Frameworks/Python.framework/Versions/3.12/bin/python3"
    dependencies = ["PyQt6", "PyInstaller", "Pillow"]
    
    for dep in dependencies:
        try:
            print(f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {dep}...")
            subprocess.run([python_path, "-m", "pip", "install", dep], check=True)
            print(f"‚úÖ {dep} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {dep}: {e}")
            return False
    
    return True

def build_universal_app():
    """–°–æ–±–∏—Ä–∞–µ–º Universal Binary —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏"""
    print("üî® –°–æ–±–∏—Ä–∞–µ–º Universal Binary —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏...")
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–±–æ—Ä–∫–∏
    if os.path.exists("dist"):
        shutil.rmtree("dist")
    if os.path.exists("build"):
        shutil.rmtree("build")
    if os.path.exists("SurveyApp.spec"):
        os.remove("SurveyApp.spec")
    
    python_path = "/Library/Frameworks/Python.framework/Versions/3.12/bin/python3"
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–±–æ—Ä–∫–∏ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    cmd = [
        python_path, "-m", "PyInstaller",
        "--onedir",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º onedir –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        "--windowed",
        "--name", "SurveyApp",
        "--icon", "favicon.icns",
        "--target-arch", "universal2",
        "--osx-bundle-identifier", "com.surveyapp.SurveyApp",
        "--add-data", "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/PyQt6:PyQt6",
        "survey_app_pyqt.py"
    ]
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É...")
        result = subprocess.run(cmd, check=True, capture_output=True, text=True)
        print("‚úÖ Universal Binary —Å–æ–∑–¥–∞–Ω!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        print(f"–í—ã–≤–æ–¥: {e.stdout}")
        print(f"–û—à–∏–±–∫–∏: {e.stderr}")
        return False

def fix_qt_libraries():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º Qt –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Qt –±–∏–±–ª–∏–æ—Ç–µ–∫–∏...")
    
    app_path = "dist/SurveyApp.app"
    frameworks_path = f"{app_path}/Contents/Frameworks"
    
    if not os.path.exists(frameworks_path):
        print("‚ùå Frameworks –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ .so —Ñ–∞–π–ª—ã
    for root, dirs, files in os.walk(frameworks_path):
        for file in files:
            if file.endswith('.so'):
                file_path = os.path.join(root, file)
                result = subprocess.run(["file", file_path], capture_output=True, text=True)
                
                if "universal binary" not in result.stdout.lower():
                    print(f"‚ùå {file} –Ω–µ universal: {result.stdout.strip()}")
                    return False
                else:
                    print(f"‚úÖ {file} universal")
    
    print("‚úÖ –í—Å–µ Qt –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ universal!")
    return True

def create_launcher_script():
    """–°–æ–∑–¥–∞–µ–º launcher —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"""
    print("üîß –°–æ–∑–¥–∞–µ–º launcher —Å–∫—Ä–∏–ø—Ç...")
    
    app_path = "dist/SurveyApp.app"
    exec_path = f"{app_path}/Contents/MacOS/SurveyApp"
    launcher_path = f"{app_path}/Contents/MacOS/SurveyApp_Launcher"
    
    # –°–æ–∑–¥–∞–µ–º launcher —Å–∫—Ä–∏–ø—Ç
    launcher_content = """#!/bin/bash
# Launcher –¥–ª—è SurveyApp
# –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É –Ω–∞ Intel –∏ Apple Silicon

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
APP_DIR="$(dirname "$0")"
EXECUTABLE="$APP_DIR/SurveyApp"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
ARCH=$(uname -m)
echo "üîç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "$EXECUTABLE" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $EXECUTABLE"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º SurveyApp..."
exec "$EXECUTABLE" "$@"
"""
    
    # –°–æ–∑–¥–∞–µ–º launcher
    with open(launcher_path, "w") as f:
        f.write(launcher_content)
    
    # –î–µ–ª–∞–µ–º launcher –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod(launcher_path, 0o755)
    
    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    backup_path = f"{app_path}/Contents/MacOS/SurveyApp_Original"
    if os.path.exists(exec_path):
        shutil.move(exec_path, backup_path)
        shutil.move(launcher_path, exec_path)
        print("‚úÖ Launcher —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω!")
        return True
    else:
        print("‚ùå –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

def verify_universal_binary():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º Universal Binary"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Universal Binary...")
    
    app_path = "dist/SurveyApp.app/Contents/MacOS/SurveyApp"
    
    if not os.path.exists(app_path):
        print("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    result = subprocess.run(["file", app_path], capture_output=True, text=True)
    print(f"–¢–∏–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {result.stdout.strip()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å –ø–æ–º–æ—â—å—é lipo
    result = subprocess.run(["lipo", "-info", app_path], capture_output=True, text=True)
    print(f"–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã: {result.stdout.strip()}")
    
    if "universal binary" in result.stdout.lower() or "x86_64 arm64" in result.stdout or "arm64 x86_64" in result.stdout:
        print("‚úÖ Universal Binary —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ Intel –∏ Apple Silicon!")
        return True
    else:
        print("‚ùå Universal Binary –Ω–µ —Å–æ–∑–¥–∞–Ω!")
        return False

def create_installer_script():
    """–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    script_content = """#!/bin/bash
echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SurveyApp –¥–ª—è Mac (Intel + Apple Silicon)"
echo "=================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
ARCH=$(uname -m)
echo "üîç –í–∞—à–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"

if [[ "$ARCH" == "arm64" ]]; then
    echo "‚úÖ Apple Silicon Mac (M1/M2/M3/M4) - –Ω–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
elif [[ "$ARCH" == "x86_64" ]]; then
    echo "‚úÖ Intel Mac - –Ω–∞—Ç–∏–≤–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
else
    echo "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
fi

# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
APP_PATH="/Applications/SurveyApp.app"
if [ -d "$APP_PATH" ]; then
    echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é..."
    rm -rf "$APP_PATH"
fi

echo "üì¶ –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
cp -R "SurveyApp.app" "$APP_PATH"

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É:"
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø–∞–ø–∫—É '–ü—Ä–æ–≥—Ä–∞–º–º—ã' –≤ Finder"
echo "2. –ù–∞–π–¥–∏—Ç–µ 'SurveyApp' –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ"
echo "3. –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ macOS –º–æ–∂–µ—Ç –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ"
echo ""
echo "üîß –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è:"
echo "1. –†–∞–∑—Ä–µ—à–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "2. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: sudo xattr -rd com.apple.quarantine /Applications/SurveyApp.app"
"""
    
    with open("dist/install.sh", "w") as f:
        f.write(script_content)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod("dist/install.sh", 0o755)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üçé –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ Universal Binary –¥–ª—è SurveyApp")
    print("=" * 60)
    
    if not check_environment():
        return
    
    if not install_dependencies():
        return
    
    if not build_universal_app():
        return
    
    if not fix_qt_libraries():
        return
    
    if not create_launcher_script():
        return
    
    if verify_universal_binary():
        create_installer_script()
        print("\nüéâ –ì–æ—Ç–æ–≤–æ!")
        print("üìÅ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: dist/SurveyApp.app")
        print("üìÅ –£—Å—Ç–∞–Ω–æ–≤–∫–∞: dist/install.sh")
        print("\nüí° –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Intel –∏ Apple Silicon!")
    else:
        print("‚ùå Universal Binary –Ω–µ —Å–æ–∑–¥–∞–Ω!")

if __name__ == "__main__":
    main()


